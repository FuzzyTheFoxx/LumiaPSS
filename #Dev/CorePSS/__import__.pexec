#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  __init__.pss
#
#  Copyright 2022  <FuzzyTheFoxx>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#
#
from os import system as cons
from os import name as sysname
import configparser
import os
from colorama import Back as _back_
from colorama import Fore as _color_
from time import sleep
import colorama
import time
import argparse
stream = print
_parser = argparse.ArgumentParser(
    exit_on_error=1, description='LumiaPSS Config Importer File. A.K.A. CfgImporter'
)
_parser.add_argument('--clear', choices='0''1',
                     help='Clears screen on start-up. Supported 0 > ON, 1 > OFF', default='0'
                     )
_parser.add_argument('--debug', choices='0''1',
                     help='Debug Mode. Supported 0 > OFF, 1 > ON', default='0'
                     )
_arg = _parser.parse_args()


def _clear_():
    if os.name == 'posix':
        _ = cons(f'clear')
    else:
        _ = cons(f'cls')


try:
    if _arg.debug == '0':
        stream(f'')
    elif _arg.debug == '1':
        stream(f' {_color_.RED}// DEBUG MODE ON //{_color_.RESET}')
    else:
        stream(f'')
    if _arg.debug == '1':
        stream(f' DEBUG: STATUS OF DEBUG MODE: {_arg.debug}')
    if _arg.clear == '0':
        _clear_()
    if _arg.debug == '1':
        if _arg.clear == '1':
            stream(f' DEBUG: STATUS OF CLEAR MODE: {_arg.clear}')
except:
    stream(f'Initialization of \'Debug Mode\' is unknown.')

try:
    _cfg_ = configparser.ConfigParser()
except:
    stream(f' CfgImporter: Error executing \'configpraser\'.')
try:
    _cfg_.read(f'./_classes_.pss-config')
    syspth = _cfg_['csl']['systm']
except:
    stream(f' CfgImporter: Error reading file(s).')

try:
    pss11 = open(f'./_classes_.py', 'r')
    pss1 = pss11.read()
    pss2 = open(f'./{syspth}/_classes_.py', 'w')
    pss2.write(f'{pss1}')
    pss11.close
    pss2.close
except:
    stream(f' CfgImporter: Error Opening/Reading/Writing Data.')
